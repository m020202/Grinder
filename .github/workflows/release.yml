name: Build Gradle and Deploy

on:
  push:
    branches: [ "main" ]

jobs:
  build-gradle:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Grant execute permission for Gradle wrapper(gradlew)
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      # 🔹 JAR 파일 원격 서버로 전송 (포트 10155 추가)
      - name: Copy jar file to remote
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          port: 10155  # SSH 포트 추가
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PRIVATE_KEY }}
          source: "./build/libs/*.jar"
          target: "/home/centeradmin/Downloads/Grinder"

      # 🔹 Dockerfile 원격 서버로 전송
      - name: Copy docker file to remote
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          port: 10155  # SSH 포트 추가
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PRIVATE_KEY }}
          source: "./Dockerfile"
          target: "/home/centeradmin/Downloads/Grinder"

      # 🔹 docker-compose.yml 원격 서버로 전송
      - name: Copy docker compose file to remote
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          port: 10155  # SSH 포트 추가
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PRIVATE_KEY }}
          source: "./docker-compose.yml"
          target: "/home/centeradmin/Downloads/Grinder"

      # 🔹 원격 서버에서 Docker Compose 실행
      - name: Run docker compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          port: 10155  # SSH 포트 추가
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PRIVATE_KEY }}
          script_stop: true
          script: |
            cd /home/centeradmin/Downloads/Grinder
            docker-compose down
            docker-compose up -d --build
            docker ps -a  # 실행 중인 컨테이너 확인